from aiogram import F, Router, types
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from games.blackjack import blackjack
from games.random_number import bet_end, input_num, input_num2, bet_change
from games.slot_machine import slot, input_bet
from games.roulette import message_roulette
from info.top import top_balance

import time
import apps.keyboards as kb
import data.requests as rq
import money.balance as b


class Bot(StatesGroup):
    dep_summa = State()
    dep_card = State()
    money_get = State()


class Game(StatesGroup):
    randomnum_bet = State()
    randomnum_c = State()
    randomnum_c1 = State()
    slot = State()


x = 0
router = Router()


# –ö–æ–º–∞–Ω–¥—ã
@router.message(CommandStart())
async def start(message: Message):
    await rq.download_users(
        tg_id=message.from_user.id,
        name=message.from_user.first_name,
        fullname=message.from_user.username,
    )
    await message.answer(
        f"–•–µ–π {message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ –†—É—Ä–æ–º–∞–Ω–∏—è!"
        f"\n–î–ª—è –Ω–∞—á–∞–ª–∞ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ‚¨áÔ∏è",
        reply_markup=kb.main,
    )


@router.message(Command("help"))
async def help_text(message: Message):
    await message.answer(
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ." "\n–ù–∏–∂–µ —è –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:",
        reply_markup=kb.info_keyboard(),
    )


@router.message(Command("daily"))
async def daily(message: Message):
    pass


# –ö–Ω–æ–ø–∫–∏, —Ä–∞–∑–¥–µ–ª —Å –∏–≥—Ä–∞–º–∏
@router.message(F.text == "–ò–≥—Ä—ãüéÆ")
async def games(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∏–≥—Ä—Éüëáüèª:", reply_markup=kb.main_games)


# –ò–≥—Ä—ã, –∏ –∏—Ö —Ñ—Å–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@router.message(F.text == "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æüé≤")
async def random_num(message: Message, state: FSMContext):
    await bet_change(message, state)


@router.message(Game.randomnum_bet)
async def random_fsm(message: types.Message, state: FSMContext):
    await bet_end(message, state)


@router.message(Game.randomnum_c)
async def fsm_rn(message: types.Message, state: FSMContext):
    await input_num(message, state)


@router.message(Game.randomnum_c1)
async def rn_fsm_end(message: types.Message, state: FSMContext):
    await input_num2(message, state)


@router.message(F.text == "–†—É–ª–µ—Ç–∫–∞üèµ")
async def message_text_roulette(message: Message):
    await message_roulette(message)


@router.message(F.text == "–ë–ª–µ–∫–¥–∂–µ–∫‚ô†Ô∏è")
async def blackjack_game(message: Message):
    await blackjack(message)


@router.message(F.text == "–°–ª–æ—Ç—ãüé∞")
async def dice_game(message: Message, state: FSMContext):
    await input_bet(message, state)


@router.message(Game.slot)
async def slot_fsm(message: Message, state: FSMContext):
    await slot(message, state)


@router.message(F.text == "–ù–∞–∑–∞–¥‚¨ÖÔ∏è")
async def back(message: Message):
    await message.answer(
        "–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞–∑–∞–¥, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É(—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –¥–∞—Ç—å –Ω–∞–º –¥–µ–Ω—è–≥üòù)",
        reply_markup=kb.main,
    )


# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞.
@router.message(F.text == "–ë–∞–ª–∞–Ω—Åüí∞")
async def balans(message: Message):
    await b.check_money(message)


@router.message(Bot.money_get)
async def get_balance2(message: types.Message, state: FSMContext):
    await b.get_balance_two(message, state)


# –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
@router.message(F.text == "–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤üí∏")
async def question(message: Message, state: FSMContext):
    await b.dep_balance(message, state)


@router.message(Bot.dep_summa)
async def card(message: Message, state: FSMContext):
    await state.set_state(Bot.dep_card)
    await message.answer("–£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ—Å—Ç—É–ø—è—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞:")


@router.message(Bot.dep_card)
async def scam(message: Message, state: FSMContext):
    await message.answer(
        "–î–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, –∂–¥–∏—Ç–µ –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏."
    )
    time.sleep(2.5)
    await message.answer(
        "(–ö–∞–∑–∏–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –§–∏–Ω–ª—è–Ω–¥–∏–∏, –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –ø–µ—Ä–µ–≤–æ–¥–µ, –∂–¥–∏—Ç–µ.)"
    )
    await state.clear()


# –ò–Ω—Ñ–æ
@router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ôü")
async def dep_money(message: Message):
    await message.answer(
        "–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ -- 1.0.0 release."
        '\n\n"–ú–æ–∂–Ω–æ –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –∞ –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Ä—É—Ä–æ–º–∞–Ω–∏—è."'
    )


@router.message(F.text == "–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüèÜ")
async def top_text(message: Message):
    await top_balance(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–µ–Ω–¥–ª–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç
@router.message(F.text)
async def text(message: Message):
    await message.answer(
        "–ü–æ—Ö–æ–∂–µ —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–ø–∏—Å–∞–ª. \n–õ—É—á—à–µ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëáüèªüëáüèª"
    )
